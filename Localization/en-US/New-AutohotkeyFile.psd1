ConvertFrom-StringData @'
ContentBtnAbortImport = Cancel
ContentBtnAddFunctionForExtraction = Add to extraction
ContentBtnAddHotkeyForExtraction = Add to extraction
ContentBtnAddHotstringForExtraction = Add to extraction
ContentBtnAddHsOption = Lägg till inställning
ContentBtnAddNew = Add new
ContentBtnAddVariableForExtraction = Lägg till för extraktion
ContentBtnCancelExtraction = Cancel extraction
ContentBtnCancelNew = Cancel
ContentBtnDeselectAll = Deselect all
ContentBtnExtractToBackup = Extract to backup-file
ContentBtnExtractToScript = Extract to script-file
ContentBtnFunctionAddParameter = Add parameter Lägg till parameter
ContentBtnFunctionRemove = Remove function
ContentBtnFunctionSave = Save function
ContentBtnHotkeyRemove = Remove
ContentBtnHotkeySave = Save
ContentBtnHotstringRemove = Remove
ContentBtnHotstringSave = Save Hotstring
ContentBtnInsertExistingCommentForExtraction = Use same comment
ContentBtnReadFileToImport = Read file
ContentBtnRemoveFromExtractList = Remove selected objects
ContentBtnSave = Save to file
ContentBtnSelectAll = Select all
ContentBtnSelectFileToImport = Select file
ContentBtnStartImport = Start import
ContentBtnVariableRemove = Remove
ContentBtnVariableSave = Save variable
ContentBtnWriteToOtherLocation = Write to selected path
ContentChbImpComment = Importer
ContentChbImpFunctionsSelectAll = Select all
ContentChbImpFunctionsSelectAllDeselected = Deselect all
ContentChbImpHotkeysSelectAll = Select all
ContentChbImpHotkeysSelectAllDeselected = Deselect all
ContentChbImpHotstringsSelectAll = Select all
ContentChbImpHotstringsSelectAllDeselected = Deselect all
ContentChbImpSettingsSelectAll = Select all
ContentChbImpSettingsSelectAllDeselected = Deselect all
ContentChbImpVariablesSelectAll = Select all
ContentChbImpVariablesSelectAllDeselected = Deselect all
ContentExpHotstringOptions = Options
ContentExpParameters = Parameters
ContentGbSettingsFiles = Settings for file to other location
ContentGbSettingsScriptOperations = Script operations
ContentGbSettingsScriptSettings = Script settings
ContentLblAdvancedHotstringTitle = Should this be an advanced Hotstring
ContentLblExtractCommentTitle = Comment for extracted skript
ContentLblExtractListTitle = To be extracted
ContentLblFileToImportTitle = File to import
ContentLblFunctionCodeTitle = Code for function
ContentLblFunctionCommentTitle = Comment
ContentLblFunctionHeaderTitle = Functionheader will look like this:
ContentLblFunctionNameTitle = Function name
ContentLblFunctionsListTitle = List of functions
ContentLblHotkeyCodeTitle = Code
ContentLblHotkeyCommentTitle = Comment
ContentLblHotkeyHotkeyTitle = Hotkey combination
ContentLblHotkeyModifierDisplayTitle = Display modifier ...
ContentLblHotkeyNameTitle = Name
ContentLblHotkeysTitle = Hotkeys
ContentLblHotstringCodeTitle = Code to be run
ContentLblHotstringCommentTitle = Comment
ContentLblHotstringMenuItemTitle = Title in meny
ContentLblHotstringNameTitle = Name of Hotstring
ContentLblHotstringSystemsListTitle = System
ContentLblHotstringSystemTitle = System Hotstring is used for
ContentLblNewNameTitle = Name
ContentLblNewSystemTitle = System
ContentLblVariableCommentTitle = Comment
ContentLblVariableListTitle = List of variables
ContentLblVariableNameTitle = Name
ContentLblVariableValueTitle = Value
ContentMenuItemNewCommand = Create new ...
ContentMenuItemNewFunction = Function
ContentMenuItemNewHotkey = Hotkey
ContentMenuItemNewHotstring = Hotstring
ContentMenuItemNewVariable = Variable
ContentRbHotkeyModifierDisplayCode = Code
ContentRbHotkeyModifierDisplayName = Name
ContentRbVariableAsExpression = Expression
ContentRbVariableAsExpressionTt = The variable will use ':=' to define value. The value must use quotationsmarks to define string.
ContentRbVariableAsLegacy = Legacy
ContentRbVariableAsLegacyTt = The variable will use equal-sign to define value. Quotationsmarks are not necessary to define string.
ContentTblBackupExtractionTargetTitle = Extracted objects will be written to this backup-file:
ContentTblCommentToImportTitle = Comment
ContentTblFunctionsToImportTitle = Functions
ContentTblHotkeyToImportTitle = Hotkeys
ContentTblHotstringToImportTitle = Hotstrings
ContentTblScriptCommentTitle = A comment that will be place at the start of the script-file. This can be an explanation about the script, or its purpose.
ContentTblScriptExtractionTargetTitle = Extracted object will be written to this script-file:
ContentTblSettingsToImportTitle = Settings
ContentTblVariablesToImportTitle = Variables
ContentTiFunctions = Functions
ContentTiHotkeys = Hotkeys
ContentTiHotstringsHeader = Hotstrings
ContentTiImport = Import
ContentTiScriptComment = Script comment
ContentTiSettings = Settings
ContentTiToExtract = To extract
ContentTiVariables = Variables
ContentTtBtnSave = Writes all items to a script file according to file settings under "Settings". Both script file and backup file will be written.
ContentTtGbSettingsFilesInfo = This defines values ​​for location, as well as name of file that can be written to a location other than home directory for current operator.
ContentTtGbSettingsScriptOperationsInfo = These settings control how the script is run and what it should contain.
ContentTtGbSettingsScriptSettingsInfo = These settings define how sections in the script file should be distinguished.
ContentTtGridNewSystemInfo = Select an already registered system, or enter a new.
ContentTtLblHotstringCodeCharLimit = With the Send Mode > Sendinput setting, the text is limited to 5000 characters. This is a restriction at the operating system level.
ContentTtSettingsImpWarning = Each setting that becomes imported will overwrite already specified settings. Import only settings if you are sure that these values ​​are wanted.
ContentTtTiToExtractIsDisabled = No items added for extraction.
ErrBackupPathNotValid = The stated backup folder is not a valid path.
ErrFuncParamNameExists = Another parameter has the same name
ErrFunctionNameExists = Another function has the same name
ErrHotkeyNameExists = Name is already in use
ErrHotstringMenuTitleExists = Another Hotstring has the same text as menutitle. This can lead to confusion which to run from the menu.
ErrHotstringNameExists = Another Hotstring has the same name
ErrImpFileInvalidExtention = The file specified is not of the correct type. Only XML and JSON can be used.
ErrImpFileNotFound = The specified path is incorrect, no file found at that path.
ErrImpFunctionNameExists = The name is used by existing function
ErrImpHotkeyHotkeyExists = Hotkey button combination is used by other hotkey
ErrImpHotstringNameExists = The name is used by existing Hotstring
ErrImpInfoJsonNotCorrectFormated = The JSON file does not appear to be formatted correctly
ErrImportFailedSummary = Some imports were not performed, see Tooltip per item
ErrImpVariableNameExists = The name is used by existing variable
ErrNewObjectNameContainsNonWordChar = The name may contain only letters and numbers
ErrNewObjectNameContainsWhiteSpaceChar = The name must not contain 'whitespace' characters
ErrNewObjectNameExists = Name is already in use
ErrScriptPathNotValid = The specified script folder is not a valid path.
ErrSettingUserIdNotFound = No user found with that id
ErrVariableNameExists = Another variable already has this name
StrAhkDataRead = Ordinary file for AhkData has been read.
StrDefaulFuncCode = ; Insert the function code here
StrDefaultMenuTitle = Menutitle for
StrExtractionCleared = All items removed from the extraction list
StrExtractionObjectRemoved = removed from the extraction list
StrFunctionNameContainsWhitespace = Name of function must not contain spaces, tabs or other whitespace characters.
StrHkTtAlt = Alt-button ; Activate when an ALT button is kept down, unless '<' or '>' is also specified.
StrHkTtAltGr = AltGr-button ; Activate when the AltGr button is pressed.
StrHkTtAmpCustComb = Combine hotkeys ; Combine buttons that are usually not modifers, i.e. a letter, and use as modifier.
StrHkTtCtrl = Control-button ; Activate when a control button is pressed, unless '<' or '>' is also specified.
StrHkTtLeftAlt = Left button of the button pait; Use only the left variant of button there are a couple of, such as the Control-, Alt- and Shift-buttons.
StrHkTtRightAlt = The right button of the button pair; Use only the right variant of the button there are a pair of, such as the Control, Alt- and Shift-buttons.
StrHkTtShift = Shift button; Activate when a Shift-button is pressed, unless '<' or '>' is also specified.
StrHkTtTilde = Do not block regular function; Usually regular button-function is blocked to run a hotkey. With Tilde, the function will be run as normal. 
StrHkTtUp = When the button is released; Activate when the buttons are released
StrHkTtWildcard = Accept all modifers; Activate Hotkey, regardless of whether one or more modifiers have been specified.
StrHkTtWin = Windows button; Activate when the Windows button is pressed.
StrHotstringDefaultText = Enter text or AHK code for this Hotstring here
StrHotstringNameContainsWhitespace = The name must not contain spaces, tabs or other whitespace characters.
StrHsExtractedIncFun = -function is used, has been included for extraction
StrHsOptionAsterix = A concluding character (eg spaces, point or Enter) is not required to activate Hotstring. Activation takes place immediately when the last character in the name is written.
StrHsOptionB0 = No automatic deletion of Hotstring-label
StrHsOptionC = Casesensitive
StrHsOptionC1 = Does not follow written common/capital letters from Hotstring-label. Use this option for auto-replace hotstring not to follow common/capital and prevent them from corresponding to the characters you actually write. Case-conforming hotstrings (which are the default) produce their replacement text in all caps if you type the abbreviation in all caps. If you type the first letter as a capital letters, the first letter of the replacement will also be uppercase (if it is a letter). If you write in any other way, the replacement will be sent exactly as defined.
StrHsOptionKn = Delay between writing characters in the replacement text. Enter delay (in milliseconds), e.g. K10 indicates delay in 10 milliseconds, K-1 indicates no delay. The setting is directly dependent on which 'Send Mode' is active: 'SendInput' - Delay is ignored, 'SendPlay' - Standard delay is zero, delay occurs between simulated button press down and that the button is released, 'SendEvent' - zero is recommended for most purposes because it is still fast, but still cooperates with other processes. Enter K-1 for not having any delay at all, which is useful for making auto replacements faster if your CPU is often under heavy load. When set on -1, a script's process prioritization becomes an important factor in how quickly it can send keystrokes.
StrHsOptionO = Omit the ending character of auto-replace Hotstrings when replacement is made. This is useful when you want a Hotstring to be kept unambiguous by still demanding a final character, but does not actually want the end character to be displayed on the screen. For example, if ':o::aristocrat' is a Hotstring, writing "ar" followed by spaces will produce "aristocrat" without trailing space, which allows you to make the word plural or possessive, without having to press backspace.
StrHsOptionPn = Process priority for Hotstring; has no effect on automatic compensation Hotstrings.
StrHsOptionQuestionMark = Activation also takes place although the Hotstring is written inside another word.
StrHsOptionR = Send text as raw text, ie without interpreting eg. {ENTER} as to send a press on the ENTER key
StrHsOptionSE = Send mode 'SendEvent'. Old method from before AutoHotKey version 1.0.43.
StrHsOptionSI = Send mode 'SendInput'. Is usually the fastest Send Mode. Prevents other input from keyboard and mouse from interupting a Hotstring auto replacement.
StrHsOptionSP = Send mode 'SendPlay'. Sends characters as messages to application, instead of simulating button presses.
StrHsOptionT = Text mode, All characters are interpreted as text and they are not trying to be interpreted as commands, except for `r,` n, `t and `b
StrHsOptionX = Hotstring is used to run command instead of auto replacement.
StrHsOptionZ = Resets the hotstring hotstring recognizer after each activation. In other words, the script will start to wait for a entirely new hotstring, eliminating from consideration anything you previously typed. This can prevent unwanted activation of Hotstring. As an example, with hotstring ':B0*?:11::', if you write three ones (1) would activate Hotstring twice, since the middle one both act as the last character at first activation, and as the first character in the last activation. With setting 'Z' in front of 'B0', four ones need to be written to activate the Hotstring twice.
StrImpDupPrefixFunctions = Functions
StrImpDupPrefixHotkeys = Hotkeys
StrImpDupPrefixHotstrings = Hotstring
StrImpDupPrefixVariables = Variables
StrImpFileFilterDesc = Old and new data files
StrImpFinishedMsg = The file has been read. Number of items found:
StrImpInfoExcludedItems = Settings and Changelog is ignored during imports
StrImportDuplicates = These are duplicates and have not been read from ordinary file:
StrInfoNoPathsSelected = Folder for writing files has not been selected
StrScriptFileTitle = This file was created
StrScriptTextAutoUpdated = The script has been automatically read again
StrSettingBackupPathName = Path for backup file
StrSettingBackupPathTtInfo = Location where the backup file is to be written
StrSettingFileNameName = Filename
StrSettingFileNameTtInfo = Base name for the backup and script files. The respective file is then appended with the associated file extension.
StrSettingIncludeAutoUpdateName = Include autoupdate
StrSettingIncludeAutoUpdateTtInfo = Include code in the script file that automatically reloads if the file is updated.
StrSettingMenuShowTriggerName = Menutrigger
StrSettingMenuShowTriggerTtInfo = Text to precede system names to trigger the menu to be displayed
StrSettingResetDefault = Reset default value
StrSettingSaveWithGuiName = Include code for GUI for the menu
StrSettingSaveWithGuiTtInfo = Should the script file include code to create GUI? This means that for each system, a menu will be created that, together with the menutrigger, will display menu when typed.
StrSettingScriptPathName = Path for scriptfile
StrSettingScriptPathTtInfo = Location where the scriptfile will be written
StrSettingSelectFolder = Select a folder
StrSettingTitleDividerCharacterName = Character for title divider
StrSettingTitleDividerCharacterTtInfo = Characters grouped with group title in the script file. This to easier view grouping
StrSettingTitleForFunctionsName = Title for functions
StrSettingTitleForFunctionsTtInfo = Title text in script file to indicate group for definition of functions
StrSettingTitleForHotkeysName = Title for Hotkeys
StrSettingTitleForHotkeysTtInfo = Title text in script file to indicate group for definition of Hotkeys
StrSettingTitleForHotstringsName = Title for Hotstrings
StrSettingTitleForHotstringsTtInfo = Title text in script file to indicate group for definition of Hotstrings
StrSettingTitleForMenuName = Title for menu
StrSettingTitleForMenuTriggersName = Title for menytriggers
StrSettingTitleForMenuTriggersTtInfo = Title text in script file to indicate group for definition of menytriggers
StrSettingTitleForMenuTtInfo = Title text in script file to indicate group for definition of menus
StrSettingTitleForVariablesName = Title for variables
StrSettingTitleForVariablesTtInfo = Title text in script file to indicate group for definition of variables
StrSettingUserIdFoundPrefix = Found
StrSettingUserIdName = User-id
StrSettingUserIdTtInfo = ID for recipient of script file. The file will be placed in the user's H:
StrSystemNameContainsWhitespace = Names of systems must not contain spaces, tabs or other whitespace characters.
StrVariableNameContainsWhitespace = Name of variable must not contain spaces, tabs or other whitespace characters.
StrWroteBackupFile = Wrote backup file to
StrWroteScriptFile = Wrote script file to
'@
